## 1.2 스프링 생태계

#### 1. 스프링 코어
> 스프링의 기본 기능을 포함하는 스프링의 기반 부분 중 하나

- Spring context : 스프링이 앱의 인스턴스를 관리할 수 있게 하는 기본 기능
- Spring aspects : 스프링이 앱에서 정의한 메서드를 가로채어 조작하는 기능
- Spring Expression Language : 특정 언어를 사용하여 스프링 구성 내용을 작성할 수 있는 기능

#### 2. Spring MVC
> 스프링을 사용하여 HTTP 통신을 처리하는 웹 Application을 개발할 수 있게 하는 스프링 프레임워크의 일부분

#### 3. Spring Data Access
> 스프링의 기본 구성요소로, SQL Database에 연결하여 앱 영속성 계층을 구현하는데 사용할 수 있는 기본 도구 제공

#### 4. Spring Testing
> 스프링 Application Test code를 작성하는 데 필요한 도구를 담고 있음.

### 1.2.1 스프링 코어의 이해

#### IoC(Inversion of Control) 제어의 역전
> 개발자가 작성한 코드가 앱 실행을 제어하는 것이 아니라, Spring 프레임워크에게 앱 제어 권한을 맡기는 것.

예를 들어, 인스턴스를 생성한다던지, 메서드를 호출하는 작업을 스프링이 알아서 한다는 의미라고 생각하면 될 것 같다.

프레임워크 자체가 앱을 제어하게 되므로 여러 의존성을 실행하고 제어하는게 아니라 하나의 프레임워크 내부에서 자동으로 의존성들이 관리되어 실행된다.

#### 스프링 부트
> 구성보다 관례 (convention over configuration) 개념을 도입한 스프링 프로젝트

스프링 부트는 프레임워크의 모든 구성을 사용자가 직접 설정하는 대신에, 필요에 따라 정의할 수 있는 기본 구성 요소를 제공한다.

---
###
> 이후 스프링의 사용처, 스프링 사용을 지양해야하는 경우에 대해서 다룬다.
